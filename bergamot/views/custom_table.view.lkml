
# *Do not manually modify this file*
#
# This file has been generated via https://github.com/mozilla/lookml-generator
# You can extend this view in the looker-spoke-default project (https://github.com/mozilla/looker-spoke-default)

view: custom_table {
  dimension: additional_properties {
    sql: ${TABLE}.additional_properties ;;
    hidden: yes
    description: "A JSON string containing any payload properties not present in the schema"
  }

  dimension: client_info__android_sdk_version {
    sql: ${TABLE}.client_info.android_sdk_version ;;
    type: string
    group_label: "Client Info"
    group_item_label: "Android Sdk Version"
    description: "The optional Android specific SDK version of the software running on this hardware device."
  }

  dimension: client_info__app_build {
    sql: ${TABLE}.client_info.app_build ;;
    type: string
    group_label: "Client Info"
    group_item_label: "App Build"
    description: "The build identifier generated by the CI system (e.g. \"1234/A\"). For language bindings that provide automatic detection for this value, (e.g. Android/Kotlin), in the unlikely event that the build identifier can not be retrieved from the OS, it is set to \"inaccessible\". For other language bindings, if the value was not provided through configuration, this metric gets set to `Unknown`."
  }

  dimension: client_info__app_channel {
    sql: ${TABLE}.client_info.app_channel ;;
    type: string
    group_label: "Client Info"
    group_item_label: "App Channel"
    description: "The channel the application is being distributed on."
  }

  dimension: client_info__app_display_version {
    sql: ${TABLE}.client_info.app_display_version ;;
    type: string
    group_label: "Client Info"
    group_item_label: "App Display Version"
    description: "The user visible version string (e.g. \"1.0.3\").  In the unlikely event that the display version can not be retrieved, it is set to \"inaccessible\"."
  }

  dimension: client_info__architecture {
    sql: ${TABLE}.client_info.architecture ;;
    type: string
    group_label: "Client Info"
    group_item_label: "Architecture"
    description: "The architecture of the device, (e.g. \"arm\", \"x86\")."
  }

  dimension: client_info__client_id {
    sql: ${TABLE}.client_info.client_id ;;
    hidden: yes
    description: "A UUID uniquely identifying the client."
  }

  dimension: client_info__device_manufacturer {
    sql: ${TABLE}.client_info.device_manufacturer ;;
    type: string
    group_label: "Client Info"
    group_item_label: "Device Manufacturer"
    description: "The manufacturer of the device the application is running on. Not set if the device manufacturer can't be determined (e.g. on Desktop)."
  }

  dimension: client_info__device_model {
    sql: ${TABLE}.client_info.device_model ;;
    type: string
    group_label: "Client Info"
    group_item_label: "Device Model"
    description: "The model of the device the application is running on. On Android, this is Build.MODEL, the user-visible marketing name, like \"Pixel 2 XL\". Not set if the device model can't be determined (e.g. on Desktop)."
  }

  dimension: client_info__first_run_date {
    sql: ${TABLE}.client_info.first_run_date ;;
    type: string
    group_label: "Client Info"
    group_item_label: "First Run Date"
    description: "The date of the first run of the application."
  }

  dimension: client_info__locale {
    sql: ${TABLE}.client_info.locale ;;
    type: string
    group_label: "Client Info"
    group_item_label: "Locale"
    description: "The locale of the application during initialization (e.g. \"es-ES\"). If the locale can't be determined on the system, the value is [\"und\"](https://unicode.org/reports/tr35/#Unknown_or_Invalid_Identifiers), to indicate \"undetermined\"."
  }

  dimension: client_info__os {
    sql: ${TABLE}.client_info.os ;;
    type: string
    group_label: "Client Info"
    group_item_label: "Os"
    description: "The name of the operating system. Possible values: Android, iOS, Linux, Darwin, Windows, FreeBSD, NetBSD, OpenBSD, Solaris, unknown"
  }

  dimension: client_info__os_version {
    sql: ${TABLE}.client_info.os_version ;;
    type: string
    group_label: "Client Info"
    group_item_label: "Os Version"
    description: "The user-visible version of the operating system (e.g. \"1.2.3\"). If the version detection fails, this metric gets set to `Unknown`."
  }

  dimension: client_info__telemetry_sdk_build {
    sql: ${TABLE}.client_info.telemetry_sdk_build ;;
    type: string
    group_label: "Client Info"
    group_item_label: "Telemetry Sdk Build"
    description: "The version of the Glean SDK"
  }

  dimension: document_id {
    sql: ${TABLE}.document_id ;;
    hidden: yes
    description: "The document ID specified in the URI when the client sent this message"
  }

  dimension: events {
    sql: ${TABLE}.events ;;
    hidden: yes
  }

  dimension: metadata__geo__city {
    sql: ${TABLE}.metadata.geo.city ;;
    type: string
    group_label: "Metadata Geo"
    group_item_label: "City"
  }

  dimension: metadata__geo__country {
    sql: ${TABLE}.metadata.geo.country ;;
    type: string
    group_label: "Metadata Geo"
    group_item_label: "Country"
    map_layer_name: countries
    description: "An ISO 3166-1 alpha-2 country code"
  }

  dimension: metadata__geo__db_version {
    sql: ${TABLE}.metadata.geo.db_version ;;
    type: string
    group_label: "Metadata Geo"
    group_item_label: "Db Version"
    description: "The specific geo database version used for this lookup"
  }

  dimension: metadata__geo__subdivision1 {
    sql: ${TABLE}.metadata.geo.subdivision1 ;;
    type: string
    group_label: "Metadata Geo"
    group_item_label: "Subdivision1"
    description: "First major country subdivision, typically a state, province, or county"
  }

  dimension: metadata__geo__subdivision2 {
    sql: ${TABLE}.metadata.geo.subdivision2 ;;
    type: string
    group_label: "Metadata Geo"
    group_item_label: "Subdivision2"
    description: "Second major country subdivision; not applicable for most countries"
  }

  dimension: metadata__header__date {
    sql: ${TABLE}.metadata.header.date ;;
    type: string
    group_label: "Metadata Header"
    group_item_label: "Date"
    description: "Date HTTP header"
  }

  dimension: metadata__header__dnt {
    sql: ${TABLE}.metadata.header.dnt ;;
    type: string
    group_label: "Metadata Header"
    group_item_label: "Dnt"
    description: "DNT (Do Not Track) HTTP header"
  }

  dimension: metadata__header__parsed_x_lb_tags__tls_cipher_hex {
    sql: ${TABLE}.metadata.header.parsed_x_lb_tags.tls_cipher_hex ;;
    type: string
    group_label: "Metadata Header Parsed X Lb Tags"
    group_item_label: "Tls Cipher Hex"
  }

  dimension: metadata__header__parsed_x_lb_tags__tls_version {
    sql: ${TABLE}.metadata.header.parsed_x_lb_tags.tls_version ;;
    type: string
    group_label: "Metadata Header Parsed X Lb Tags"
    group_item_label: "Tls Version"
  }

  dimension: metadata__header__parsed_x_source_tags {
    sql: ${TABLE}.metadata.header.parsed_x_source_tags ;;
    hidden: yes
  }

  dimension: metadata__header__x_debug_id {
    sql: ${TABLE}.metadata.header.x_debug_id ;;
    type: string
    group_label: "Metadata Header"
    group_item_label: "X Debug Id"
    description: "X-Debug-Id HTTP header"
  }

  dimension: metadata__header__x_foxsec_ip_reputation {
    sql: ${TABLE}.metadata.header.x_foxsec_ip_reputation ;;
    type: string
    group_label: "Metadata Header"
    group_item_label: "X Foxsec Ip Reputation"
    description: "X-Foxsec-IP-Reputation header"
  }

  dimension: metadata__header__x_lb_tags {
    sql: ${TABLE}.metadata.header.x_lb_tags ;;
    type: string
    group_label: "Metadata Header"
    group_item_label: "X Lb Tags"
    description: "X-LB-Tags HTTP header"
  }

  dimension: metadata__header__x_pingsender_version {
    sql: ${TABLE}.metadata.header.x_pingsender_version ;;
    type: string
    group_label: "Metadata Header"
    group_item_label: "X Pingsender Version"
    description: "X-PingSender-Version HTTP header"
  }

  dimension: metadata__header__x_source_tags {
    sql: ${TABLE}.metadata.header.x_source_tags ;;
    type: string
    group_label: "Metadata Header"
    group_item_label: "X Source Tags"
    description: "X-Source-Tags HTTP header"
  }

  dimension: metadata__header__x_telemetry_agent {
    sql: ${TABLE}.metadata.header.x_telemetry_agent ;;
    type: string
    group_label: "Metadata Header"
    group_item_label: "X Telemetry Agent"
    description: "X-Telemetry-Agent HTTP header"
  }

  dimension: metadata__isp__db_version {
    sql: ${TABLE}.metadata.isp.db_version ;;
    type: string
    group_label: "Metadata Isp"
    group_item_label: "Db Version"
    description: "The specific geo ISP database version used for this lookup"
  }

  dimension: metadata__isp__name {
    sql: ${TABLE}.metadata.isp.name ;;
    type: string
    group_label: "Metadata Isp"
    group_item_label: "Name"
    description: "The name of the ISP associated with the client's IP address"
  }

  dimension: metadata__isp__organization {
    sql: ${TABLE}.metadata.isp.organization ;;
    type: string
    group_label: "Metadata Isp"
    group_item_label: "Organization"
    description: "The name of a specific business entity associated with the client's IP address when available; otherwise the ISP name"
  }

  dimension: metadata__user_agent__browser {
    sql: ${TABLE}.metadata.user_agent.browser ;;
    type: string
    group_label: "Metadata User Agent"
    group_item_label: "Browser"
  }

  dimension: metadata__user_agent__os {
    sql: ${TABLE}.metadata.user_agent.os ;;
    type: string
    group_label: "Metadata User Agent"
    group_item_label: "Os"
  }

  dimension: metadata__user_agent__version {
    sql: ${TABLE}.metadata.user_agent.version ;;
    type: string
    group_label: "Metadata User Agent"
    group_item_label: "Version"
  }

  dimension: metrics__counter__errors_marian {
    sql: ${TABLE}.metrics.counter.errors_marian ;;
    type: number
    group_label: "Metrics Counter"
    group_item_label: "Errors Marian"
    description: "Marian code related error.
"
  }

  dimension: metrics__counter__errors_memory {
    sql: ${TABLE}.metrics.counter.errors_memory ;;
    type: number
    group_label: "Metrics Counter"
    group_item_label: "Errors Memory"
    description: "Memory allocation error.
"
  }

  dimension: metrics__counter__errors_model_download {
    sql: ${TABLE}.metrics.counter.errors_model_download ;;
    type: number
    group_label: "Metrics Counter"
    group_item_label: "Errors Model Download"
    description: "Failed to download a model for a supported language pair.
"
  }

  dimension: metrics__counter__errors_translation {
    sql: ${TABLE}.metrics.counter.errors_translation ;;
    type: number
    group_label: "Metrics Counter"
    group_item_label: "Errors Translation"
    description: "The translation procedure has failed.
"
  }

  dimension: metrics__counter__service_lang_mismatch {
    sql: ${TABLE}.metrics.counter.service_lang_mismatch ;;
    type: number
    group_label: "Metrics Counter"
    group_item_label: "Service Lang Mismatch"
    description: "The user and website languages do not match.
"
  }

  dimension: metrics__counter__service_not_supported {
    sql: ${TABLE}.metrics.counter.service_not_supported ;;
    type: number
    group_label: "Metrics Counter"
    group_item_label: "Service Not Supported"
    description: "Language pair of user and website languages is not supported.
"
  }

  dimension: metrics__counter__service_not_suppported {
    sql: ${TABLE}.metrics.counter.service_not_suppported ;;
    type: number
    group_label: "Metrics Counter"
    group_item_label: "Service Not Suppported"
    description: "Language pair of user and website languages is not supported.
"
  }

  dimension: metrics__counter__test_counter_test {
    sql: ${TABLE}.metrics.counter.test_counter_test ;;
    type: number
    group_label: "Metrics Counter"
    group_item_label: "Test Counter Test"
    description: "Test counter.
"
  }

  dimension: metrics__jwe {
    sql: ${TABLE}.metrics.jwe ;;
    hidden: yes
  }

  dimension: metrics__labeled_counter__glean_error_invalid_label {
    sql: ${TABLE}.metrics.labeled_counter.glean_error_invalid_label ;;
    hidden: yes
    description: "Counts the number of times a metric was set with an invalid label.
The labels are the `category.name` identifier of the metric.
"
  }

  dimension: metrics__labeled_counter__glean_error_invalid_overflow {
    sql: ${TABLE}.metrics.labeled_counter.glean_error_invalid_overflow ;;
    hidden: yes
    description: "Counts the number of times a metric was set a value that overflowed.
The labels are the `category.name` identifier of the metric.
"
  }

  dimension: metrics__labeled_counter__glean_error_invalid_state {
    sql: ${TABLE}.metrics.labeled_counter.glean_error_invalid_state ;;
    hidden: yes
    description: "Counts the number of times a timing metric was used incorrectly.
The labels are the `category.name` identifier of the metric.
"
  }

  dimension: metrics__labeled_counter__glean_error_invalid_value {
    sql: ${TABLE}.metrics.labeled_counter.glean_error_invalid_value ;;
    hidden: yes
    description: "Counts the number of times a metric was set to an invalid value.
The labels are the `category.name` identifier of the metric.
"
  }

  dimension: metrics__labeled_rate {
    sql: ${TABLE}.metrics.labeled_rate ;;
    hidden: yes
  }

  dimension: metrics__quantity__metadata_cpu_cores_count {
    sql: ${TABLE}.metrics.quantity.metadata_cpu_cores_count ;;
    type: number
    group_label: "Metrics Quantity"
    group_item_label: "Metadata Cpu Cores Count"
    description: "Telemetry Environment `system.cpu.cores` metric
"
  }

  dimension: metrics__quantity__metadata_cpu_count {
    sql: ${TABLE}.metrics.quantity.metadata_cpu_count ;;
    type: number
    group_label: "Metrics Quantity"
    group_item_label: "Metadata Cpu Count"
    description: "Telemetry Environment `system.cpu.count` metric
"
  }

  dimension: metrics__quantity__metadata_cpu_l2_cache {
    sql: ${TABLE}.metrics.quantity.metadata_cpu_l2_cache ;;
    type: number
    group_label: "Metrics Quantity"
    group_item_label: "Metadata Cpu L2 Cache"
    description: "Telemetry Environment `system.cpu.l2cacheKB` metric
"
  }

  dimension: metrics__quantity__metadata_cpu_l3_cache {
    sql: ${TABLE}.metrics.quantity.metadata_cpu_l3_cache ;;
    type: number
    group_label: "Metrics Quantity"
    group_item_label: "Metadata Cpu L3 Cache"
    description: "Telemetry Environment `system.cpu.l3cacheKB` metric
"
  }

  dimension: metrics__quantity__metadata_cpu_speed {
    sql: ${TABLE}.metrics.quantity.metadata_cpu_speed ;;
    type: number
    group_label: "Metrics Quantity"
    group_item_label: "Metadata Cpu Speed"
    description: "Telemetry Environment `system.cpu.speedMHz` metric
"
  }

  dimension: metrics__quantity__metadata_system_memory {
    sql: ${TABLE}.metrics.quantity.metadata_system_memory ;;
    type: number
    group_label: "Metrics Quantity"
    group_item_label: "Metadata System Memory"
    description: "Telemetry Environment `system.memoryMB` metric
"
  }

  dimension: metrics__quantity__performance_full_page_translated_wps {
    sql: ${TABLE}.metrics.quantity.performance_full_page_translated_wps ;;
    type: number
    group_label: "Metrics Quantity"
    group_item_label: "Performance Full Page Translated Wps"
    description: "Speed of the translation from \"translation button
pressed\" to \"full page is translated\".
"
  }

  dimension: metrics__quantity__performance_translation_engine_wps {
    sql: ${TABLE}.metrics.quantity.performance_translation_engine_wps ;;
    type: number
    group_label: "Metrics Quantity"
    group_item_label: "Performance Translation Engine Wps"
    description: "Speed of translation as measured by the translation engine.
"
  }

  dimension: metrics__quantity__performance_word_count {
    sql: ${TABLE}.metrics.quantity.performance_word_count ;;
    type: number
    group_label: "Metrics Quantity"
    group_item_label: "Performance Word Count"
    description: "Total number of words on the original web page.
"
  }

  dimension: metrics__quantity__performance_word_count_visible_in_viewport {
    sql: ${TABLE}.metrics.quantity.performance_word_count_visible_in_viewport ;;
    type: number
    group_label: "Metrics Quantity"
    group_item_label: "Performance Word Count Visible In Viewport"
    description: "Total number of visible words on the original web page that
were visible in the viewport at the time of \"translation button pressed\".
"
  }

  dimension: metrics__string__metadata_bergamot_translator_version {
    sql: ${TABLE}.metrics.string.metadata_bergamot_translator_version ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Metadata Bergamot Translator Version"
    description: "Bergamot translator engine version
"
  }

  dimension: metrics__string__metadata_cpu_extensions {
    sql: ${TABLE}.metrics.string.metadata_cpu_extensions ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Metadata Cpu Extensions"
    description: "Telemetry Environment `system.cpu.extensions` metric
"
  }

  dimension: metrics__string__metadata_cpu_family {
    sql: ${TABLE}.metrics.string.metadata_cpu_family ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Metadata Cpu Family"
    description: "Telemetry Environment `system.cpu.family` metric
"
  }

  dimension: metrics__string__metadata_cpu_model {
    sql: ${TABLE}.metrics.string.metadata_cpu_model ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Metadata Cpu Model"
    description: "Telemetry Environment `system.cpu.model` metric
"
  }

  dimension: metrics__string__metadata_cpu_stepping {
    sql: ${TABLE}.metrics.string.metadata_cpu_stepping ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Metadata Cpu Stepping"
    description: "Telemetry Environment `system.cpu.stepping` metric
"
  }

  dimension: metrics__string__metadata_cpu_vendor {
    sql: ${TABLE}.metrics.string.metadata_cpu_vendor ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Metadata Cpu Vendor"
    description: "Telemetry Environment `system.cpu.vendor` metric
"
  }

  dimension: metrics__string__metadata_extension_build_id {
    sql: ${TABLE}.metrics.string.metadata_extension_build_id ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Metadata Extension Build Id"
    description: "Extension build id, indicating which git revision
and build config was used to produce this build
"
  }

  dimension: metrics__string__metadata_extension_version {
    sql: ${TABLE}.metrics.string.metadata_extension_version ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Metadata Extension Version"
    description: "Extension version
"
  }

  dimension: metrics__string__metadata_firefox_client_id {
    sql: ${TABLE}.metrics.string.metadata_firefox_client_id ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Metadata Firefox Client Id"
    description: "Firefox Telemetry client id.
"
  }

  dimension: metrics__string__metadata_from_lang {
    sql: ${TABLE}.metrics.string.metadata_from_lang ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Metadata From Lang"
    description: "Translation source language.
"
  }

  dimension: metrics__string__metadata_to_lang {
    sql: ${TABLE}.metrics.string.metadata_to_lang ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Metadata To Lang"
    description: "Translation target language.
"
  }

  dimension: metrics__string__performance_model_download_time {
    sql: ${TABLE}.metrics.string.performance_model_download_time ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Performance Model Download Time"
    description: "Time spent on downloading a translation model for a language pair (ms).
"
  }

  dimension: metrics__string__performance_model_load_time {
    sql: ${TABLE}.metrics.string.performance_model_load_time ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Performance Model Load Time"
    description: "Time spent on loading a model into memory to start translation (ms).
"
  }

  dimension: metrics__string__performance_translation_quality {
    sql: ${TABLE}.metrics.string.performance_translation_quality ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Performance Translation Quality"
    description: "Quality estimation of translation.
"
  }

  dimension: metrics__string__performance_translation_time {
    sql: ${TABLE}.metrics.string.performance_translation_time ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Performance Translation Time"
    description: "Time spent on web page translation (ms).
"
  }

  dimension: metrics__string__performance_words_per_second {
    sql: ${TABLE}.metrics.string.performance_words_per_second ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Performance Words Per Second"
    description: "Speed of translation.
"
  }

  dimension: metrics__string__test_string_test {
    sql: ${TABLE}.metrics.string.test_string_test ;;
    type: string
    group_label: "Metrics String"
    group_item_label: "Test String Test"
    description: "Test string.
"
  }

  dimension: metrics__text {
    sql: ${TABLE}.metrics.text ;;
    hidden: yes
  }

  dimension: metrics__timespan__performance_full_page_translated_time__time_unit {
    sql: ${TABLE}.metrics.timespan.performance_full_page_translated_time.time_unit ;;
    type: string
    group_label: "Metrics Timespan Performance Full Page Translated Time"
    group_item_label: "Time Unit"
  }

  dimension: metrics__timespan__performance_full_page_translated_time__value {
    sql: ${TABLE}.metrics.timespan.performance_full_page_translated_time.value ;;
    type: number
    group_label: "Metrics Timespan Performance Full Page Translated Time"
    group_item_label: "Value"
  }

  dimension: metrics__timespan__performance_model_download_time_num__time_unit {
    sql: ${TABLE}.metrics.timespan.performance_model_download_time_num.time_unit ;;
    type: string
    group_label: "Metrics Timespan Performance Model Download Time Num"
    group_item_label: "Time Unit"
  }

  dimension: metrics__timespan__performance_model_download_time_num__value {
    sql: ${TABLE}.metrics.timespan.performance_model_download_time_num.value ;;
    type: number
    group_label: "Metrics Timespan Performance Model Download Time Num"
    group_item_label: "Value"
  }

  dimension: metrics__timespan__performance_model_load_time_num__time_unit {
    sql: ${TABLE}.metrics.timespan.performance_model_load_time_num.time_unit ;;
    type: string
    group_label: "Metrics Timespan Performance Model Load Time Num"
    group_item_label: "Time Unit"
  }

  dimension: metrics__timespan__performance_model_load_time_num__value {
    sql: ${TABLE}.metrics.timespan.performance_model_load_time_num.value ;;
    type: number
    group_label: "Metrics Timespan Performance Model Load Time Num"
    group_item_label: "Value"
  }

  dimension: metrics__timespan__performance_translation_engine_time__time_unit {
    sql: ${TABLE}.metrics.timespan.performance_translation_engine_time.time_unit ;;
    type: string
    group_label: "Metrics Timespan Performance Translation Engine Time"
    group_item_label: "Time Unit"
  }

  dimension: metrics__timespan__performance_translation_engine_time__value {
    sql: ${TABLE}.metrics.timespan.performance_translation_engine_time.value ;;
    type: number
    group_label: "Metrics Timespan Performance Translation Engine Time"
    group_item_label: "Value"
  }

  dimension: metrics__url {
    sql: ${TABLE}.metrics.url ;;
    hidden: yes
  }

  dimension: normalized_app_name {
    sql: ${TABLE}.normalized_app_name ;;
    type: string
    description: "Set to \"Other\" if this message contained an unrecognized app name"
  }

  dimension: normalized_channel {
    sql: ${TABLE}.normalized_channel ;;
    type: string
    description: "Set to \"Other\" if this message contained an unrecognized channel name"
  }

  dimension: normalized_country_code {
    sql: ${TABLE}.normalized_country_code ;;
    type: string
    description: "An ISO 3166-1 alpha-2 country code"
  }

  dimension: normalized_os {
    sql: ${TABLE}.normalized_os ;;
    type: string
    description: "Set to \"Other\" if this message contained an unrecognized OS name"
  }

  dimension: normalized_os_version {
    sql: ${TABLE}.normalized_os_version ;;
    type: string
  }

  dimension: ping_info__end_time {
    sql: ${TABLE}.ping_info.end_time ;;
    type: string
    group_label: "Ping Info"
    group_item_label: "End Time"
  }

  dimension: ping_info__experiments {
    sql: ${TABLE}.ping_info.experiments ;;
    hidden: yes
  }

  dimension: ping_info__ping_type {
    sql: ${TABLE}.ping_info.ping_type ;;
    type: string
    group_label: "Ping Info"
    group_item_label: "Ping Type"
  }

  dimension: ping_info__reason {
    sql: ${TABLE}.ping_info.reason ;;
    type: string
    group_label: "Ping Info"
    group_item_label: "Reason"
  }

  dimension: ping_info__seq {
    sql: ${TABLE}.ping_info.seq ;;
    type: number
    group_label: "Ping Info"
    group_item_label: "Seq"
  }

  dimension: ping_info__start_time {
    sql: ${TABLE}.ping_info.start_time ;;
    type: string
    group_label: "Ping Info"
    group_item_label: "Start Time"
  }

  dimension: sample_id {
    sql: ${TABLE}.sample_id ;;
    type: number
    description: "Hashed version of client_id (if present) useful for partitioning; ranges from 0 to 99"
  }

  dimension_group: metadata__header__parsed {
    sql: ${TABLE}.metadata.header.parsed_date ;;
    type: time
    timeframes: [
      raw,
      time,
      date,
      week,
      month,
      quarter,
      year,
    ]
    label: "Metadata Header: Parsed Date"
  }

  dimension_group: ping_info__parsed_end {
    sql: ${TABLE}.ping_info.parsed_end_time ;;
    type: time
    timeframes: [
      raw,
      time,
      date,
      week,
      month,
      quarter,
      year,
    ]
    label: "Ping Info: Parsed End Time"
  }

  dimension_group: ping_info__parsed_start {
    sql: ${TABLE}.ping_info.parsed_start_time ;;
    type: time
    timeframes: [
      raw,
      time,
      date,
      week,
      month,
      quarter,
      year,
    ]
    label: "Ping Info: Parsed Start Time"
  }

  dimension_group: submission {
    sql: ${TABLE}.submission_timestamp ;;
    type: time
    timeframes: [
      raw,
      time,
      date,
      week,
      month,
      quarter,
      year,
    ]
    description: "Time when the ingestion edge server accepted this message"
  }

  sql_table_name: `mozdata.org_mozilla_bergamot.custom` ;;
}

view: custom_table__events {
  dimension: category {
    sql: ${TABLE}.category ;;
    type: string
  }

  dimension: extra {
    sql: ${TABLE}.extra ;;
    hidden: yes
  }

  dimension: name {
    sql: ${TABLE}.name ;;
    type: string
  }

  dimension: timestamp {
    sql: ${TABLE}.timestamp ;;
    type: number
  }
}

view: custom_table__events__extra {
  dimension: key {
    sql: ${TABLE}.key ;;
    type: string
  }

  dimension: value {
    sql: ${TABLE}.value ;;
    type: string
  }
}

view: custom_table__metrics__jwe {
  dimension: key {
    sql: ${TABLE}.key ;;
    type: string
  }

  dimension: value {
    sql: ${TABLE}.value ;;
    type: string
  }
}

view: custom_table__metrics__labeled_rate {
  dimension: key {
    sql: ${TABLE}.key ;;
    type: string
  }

  dimension: value {
    sql: ${TABLE}.value ;;
    hidden: yes
  }
}

view: custom_table__metrics__labeled_rate__value {
  dimension: key {
    sql: ${TABLE}.key ;;
    type: string
  }

  dimension: value__denominator {
    sql: ${TABLE}.value.denominator ;;
    type: number
    group_label: "Value"
    group_item_label: "Denominator"
  }

  dimension: value__numerator {
    sql: ${TABLE}.value.numerator ;;
    type: number
    group_label: "Value"
    group_item_label: "Numerator"
  }
}

view: custom_table__metrics__text {
  dimension: key {
    sql: ${TABLE}.key ;;
    type: string
  }

  dimension: value {
    sql: ${TABLE}.value ;;
    type: string
  }
}

view: custom_table__metrics__url {
  dimension: key {
    sql: ${TABLE}.key ;;
    type: string
  }

  dimension: value {
    sql: ${TABLE}.value ;;
    type: string
  }
}

view: custom_table__ping_info__experiments {
  dimension: key {
    sql: ${TABLE}.key ;;
    type: string
  }

  dimension: value__branch {
    sql: ${TABLE}.value.branch ;;
    type: string
    group_label: "Value"
    group_item_label: "Branch"
  }

  dimension: value__extra__type {
    sql: ${TABLE}.value.extra.type ;;
    type: string
    group_label: "Value Extra"
    group_item_label: "Type"
  }
}